Voici un script Node.js natif qui lit le fichier `fbrute.csv`, extrait les valeurs des colonnes `icm` et `idneutre`, puis écrit les résultats dans `ficm.txt` et `fidneutre.txt` avec le format spécifié.  

### Script : `process_csv.js`
```javascript
const fs = require('fs');
const path = require('path');

// Lire le fichier CSV
const inputFilePath = path.join(__dirname, 'fbrute.csv');
const data = fs.readFileSync(inputFilePath, 'utf8');

// Diviser les lignes et ignorer l'en-tête
const lines = data.trim().split('\n').slice(1);

const icmList = [];
const idneutreList = [];

// Parcourir les lignes et extraire les valeurs
for (const line of lines) {
    const [icm, idneutre] = line.split(';');
    if (icm && idneutre) {
        icmList.push(`'${icm}'`);
        idneutreList.push(`'"${idneutre}"'`);
    }
}

// Écrire dans ficm.txt
fs.writeFileSync(path.join(__dirname, 'ficm.txt'), icmList.join(','));
console.log('ficm.txt créé avec succès.');

// Écrire dans fidneutre.txt
fs.writeFileSync(path.join(__dirname, 'fidneutre.txt'), idneutreList.join(','));
console.log('fidneutre.txt créé avec succès.');
```

### Instructions :
1. Sauvegarde ce script sous le nom `process_csv.js` dans le même dossier que `fbrute.csv`.
2. Exécute-le avec Node.js :
   ```sh
   node process_csv.js
   ```
3. Cela générera `ficm.txt` et `fidneutre.txt` avec le format souhaité.

Dis-moi si tu veux des ajustements !
