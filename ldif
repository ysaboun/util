Voici un **exemple d‚Äôentr√©e LDIF** conforme √† ton mod√®le LDAP, en prenant comme base les correspondances que tu as list√©es :

---

### üìÑ Exemple d‚Äôentr√©e LDIF g√©n√©r√©e

```ldif
dn: uid=12345678,ou=users,dc=example,dc=com
objectClass: inetOrgPerson
objectClass: organizationalPerson
objectClass: person
objectClass: top
uid: 12345678
cn: Benali
sn: Karim
mail: karim.benali@email.com
mobile: +213123456789
userPassword: $2a$10$abcde12345hashedPassword
soc: MaSocieteTech
compteId: 987654321
isMigrate: TRUE
status: actif
idFederation: fed-00123
createTimestamp: 20250425083000Z
entryDn: uid=12345678,ou=users,dc=example,dc=com
```

---

### üß© Correspondance attributs Java ‚Üî LDAP

| Attribut Java        | LDIF (LDAP)       |
|----------------------|------------------|
| `icm`                | `uid`            |
| `nom`                | `cn`             |
| `pr√©nom`             | `sn`             |
| `mail`               | `mail`           |
| `telephone`          | `mobile`         |
| `codeSecret`         | `userPassword`   |
| `societe`            | `soc`            |
| `compteId`           | `compteId`       |
| (√† enrichir)         | `status`         |
| (√† enrichir)         | `idFederation`   |
| auto-g√©n√©r√©          | `createTimestamp`|
| construit            | `entryDn`        |

---

### ‚úÖ Notes

- `createTimestamp` peut √™tre g√©n√©r√© avec `new SimpleDateFormat("yyyyMMddHHmmss'Z'").format(new Date())`.
- `entryDn` est construit dynamiquement √† partir du `uid` (ex: `uid=12345678,ou=users,dc=example,dc=com`).
- Le mot de passe doit √™tre hash√© au format attendu par ton LDAP (ex : bcrypt `$2a$10$...` si support√© par PingDirectory).

Souhaites-tu que je g√©n√®re le **code Java dans un writer LDIF** pour produire ce genre d'entr√©e dynamiquement ?
