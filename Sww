Non, un **Service Worker** est **scopé** au domaine et au chemin où il est enregistré. Cela signifie que :  

1. Un **Service Worker enregistré sur** `www.site.fr` **ne sera pas actif sur** `www.sous-domaine.site.fr`, car les sous-domaines sont considérés comme des origines différentes.  
2. Chaque sous-domaine (`sous-domaine.site.fr`) doit **enregistrer son propre Service Worker** s'il veut en utiliser un.  

### Concernant les **tokens OAuth2** et le partage d'accès :
- Si votre Service Worker gère des **tokens OAuth2** pour authentifier des requêtes, il ne pourra pas **automatiquement** partager ces tokens entre `www.site.fr` et `www.sous-domaine.site.fr`, car le stockage des tokens dépend des **cookies**, du `localStorage`, ou du `IndexedDB`, qui sont **isolés par origine**.
- Une solution courante pour partager un token entre un domaine et ses sous-domaines est d'utiliser un **cookie avec le flag `Domain=site.fr`**, ce qui permettrait à `www.site.fr` et `www.sous-domaine.site.fr` d'y accéder.

Si ton objectif est d’avoir un Service Worker qui fonctionne sur plusieurs sous-domaines, il faut soit :
1. **Mettre en place un Service Worker distinct pour chaque sous-domaine.**  
2. **Utiliser un serveur centralisé** pour gérer l’authentification et récupérer les tokens via des requêtes API sécurisées.  
3. **Stocker les tokens dans un cookie accessible aux sous-domaines** (en faisant attention aux implications de sécurité).  

Si tu veux une solution spécifique, n'hésite pas à préciser ton cas d'usage !
