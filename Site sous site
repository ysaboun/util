Voici un **Proof of Concept (PoC)** en **JavaScript** utilisant l'API **BroadcastChannel** pour partager un token entre `site.fr` et `sous-domaine.site.fr` via deux **Service Workers**.

---

### üõ† **Architecture du PoC**  
- Deux Service Workers : un pour `site.fr` et un pour `sous-domaine.site.fr`.
- Un **BroadcastChannel** nomm√© `"auth-token-channel"` pour √©changer les messages.
- Un **token** stock√© dans le Service Worker de `site.fr` et partag√© avec `sous-domaine.site.fr`.

---

## üìå **1. Service Worker pour `site.fr`**
Fichier : `sw-main.js`
```js
self.addEventListener('install', (event) => {
    console.log('[SW] Install√© sur site.fr');
    self.skipWaiting();
});

self.addEventListener('activate', (event) => {
    console.log('[SW] Activ√© sur site.fr');
});

const channel = new BroadcastChannel('auth-token-channel');
let token = 'SECRET-TOKEN-123'; // Simule un token

channel.addEventListener('message', (event) => {
    if (event.data.type === 'REQUEST_TOKEN') {
        console.log('[SW site.fr] Envoi du token...');
        channel.postMessage({ type: 'TOKEN_RESPONSE', token });
    }
});
```

---

## üìå **2. Service Worker pour `sous-domaine.site.fr`**
Fichier : `sw-subdomain.js`
```js
self.addEventListener('install', (event) => {
    console.log('[SW] Install√© sur sous-domaine.site.fr');
    self.skipWaiting();
});

self.addEventListener('activate', (event) => {
    console.log('[SW] Activ√© sur sous-domaine.site.fr');
});

const channel = new BroadcastChannel('auth-token-channel');

channel.addEventListener('message', (event) => {
    if (event.data.type === 'TOKEN_RESPONSE') {
        console.log('[SW sous-domaine] Token re√ßu:', event.data.token);
    }
});
```

---

## üìå **3. Code Frontend pour `site.fr`**
Fichier : `index.html` (ou `script.js`)
```js
if ('serviceWorker' in navigator) {
    navigator.serviceWorker.register('/sw-main.js')
        .then(() => console.log('Service Worker site.fr enregistr√©'))
        .catch(console.error);
}

const channel = new BroadcastChannel('auth-token-channel');

function sendTokenRequest() {
    console.log('[site.fr] Envoi de la demande de token...');
    channel.postMessage({ type: 'REQUEST_TOKEN' });
}

document.getElementById('shareToken').addEventListener('click', sendTokenRequest);
```
HTML associ√© :
```html
<button id="shareToken">Partager Token</button>
```

---

## üìå **4. Code Frontend pour `sous-domaine.site.fr`**
Fichier : `index.html` (ou `script.js`)
```js
if ('serviceWorker' in navigator) {
    navigator.serviceWorker.register('/sw-subdomain.js')
        .then(() => console.log('Service Worker sous-domaine enregistr√©'))
        .catch(console.error);
}

const channel = new BroadcastChannel('auth-token-channel');

function requestToken() {
    console.log('[sous-domaine] Demande du token...');
    channel.postMessage({ type: 'REQUEST_TOKEN' });
}

document.getElementById('requestToken').addEventListener('click', requestToken);
```
HTML associ√© :
```html
<button id="requestToken">Demander Token</button>
```

---

## üî• **Explication & Fonctionnement**
1. `site.fr` enregistre un Service Worker et stocke un **token**.
2. `sous-domaine.site.fr` enregistre un autre Service Worker.
3. Un canal **BroadcastChannel** `"auth-token-channel"` est ouvert des deux c√¥t√©s.
4. Quand l'utilisateur clique sur `Demander Token` sur `sous-domaine.site.fr`, une demande est envoy√©e via **BroadcastChannel**.
5. `site.fr` √©coute cette demande et r√©pond avec le **token**.
6. `sous-domaine.site.fr` re√ßoit et affiche le **token**.

---

## ‚ö†Ô∏è **Limitations et S√©curit√©**
- **Ne pas utiliser ce PoC en production sans s√©curisation** (ex : v√©rifier l'origine avant d'envoyer le token).
- **Le BroadcastChannel ne fonctionne que pour les sous-domaines**, il ne traverse pas les domaines diff√©rents.
- Pour des **cas plus s√©curis√©s**, utilisez des **cookies HttpOnly**, du **Storage partag√©** ou **WebSockets**.

---

### ‚úÖ **Ce PoC est pr√™t √† √™tre test√© !**  
Tu peux le lancer sur un serveur local avec `localhost` et un sous-domaine (`127.0.0.1.nip.io`). Besoin d'aide pour √ßa ?
