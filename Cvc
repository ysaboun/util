Voici le schÃ©ma enrichi avec la **partie "Pipe / Filter"** en amont de la chaÃ®ne. Cela reflÃ¨te lâ€™architecture type oÃ¹ le contrÃ´le dâ€™accÃ¨s sâ€™effectue **le plus tÃ´t possible**, avant mÃªme que la logique API ne soit exÃ©cutÃ©e :

```
Â  Â  Â  Â  Â +----------------------------+
Â  Â  Â  Â  Â |         Client HTTP        |
Â  Â  Â  Â  Â +-------------+--------------+
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â |
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â v
Â  Â  Â  Â  Â +----------------------------+
Â  Â  Â  Â  Â | Pipe / Filter / Interceptor|  â—€â”€â”€ Extraction JWT, UserID, scopes
Â  Â  Â  Â  Â +-------------+--------------+
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â |
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â v
Â  Â  Â  Â  Â +----------------------------+
Â  Â  Â  Â  Â |        API faÃ§ade          |
Â  Â  Â  Â  Â +-------------+--------------+
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â |
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â v
Â  Â  Â  Â  Â +----------------------------+
Â  Â  Â  Â  Â | AuthorizationService / PEP |  â—€â”€â”€ Policy Enforcement Point
Â  Â  Â  Â  Â +-------------+--------------+
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â |
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â v
Â  Â  Â +-----------------------------+
Â  Â  Â |  Engine / RÃ¨gles mÃ©tier     |  â—€â”€â”€ PDP : Policy Decision Point
Â  Â  Â |  - via code Java            |
Â  Â  Â |  - ou via policies (Rego, JSONâ€¦) |
Â  Â  Â +-----------------------------+
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â |
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â v
Â  Â  Â  Â  Â  Â  Â [Contextes, Ressources, RÃ´les]
```

---

### ðŸ”Ž DÃ©tail des rÃ´les

* **Pipe / Filter / Interceptor** :

  * Point de contrÃ´le initial (security gate)
  * Extrait l'identitÃ© du token JWT
  * Peut faire appel au `AuthorizationService` directement pour bloquer ou laisser passer
  * Applique aussi des contrÃ´les transverses (ex : logs, traceId, rate limitâ€¦)

* **AuthorizationService (PEP)** :

  * IntermÃ©diaire qui **demande une dÃ©cision dâ€™accÃ¨s** Ã  lâ€™engine de rÃ¨gles.

* **Engine (PDP)** :

  * ImplÃ©mente la logique mÃ©tier d'habilitation (via du code ou des policies)
  * Peut interroger une base ou du cache pour obtenir les habilitations de l'utilisateur

---

Souhaites-tu ce schÃ©ma en version **image graphique** ou un **exemple de code complet avec Filter + Service + RÃ¨gles en Java** ?
