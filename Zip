Une requ√™te HTTP avec l‚Äôen-t√™te `Accept-Encoding: gzip` indique au serveur que le client (navigateur, application ou API consumer) **accepte les r√©ponses compress√©es avec l‚Äôalgorithme Gzip**.
C‚Äôest un m√©canisme standard pour **r√©duire la taille du corps de la r√©ponse** et donc am√©liorer les performances r√©seau.

Voici comment √ßa fonctionne concr√®tement :

---

### üîπ Exemple de requ√™te HTTP

```http
GET /api/users HTTP/1.1
Host: example.com
Accept: application/json
Accept-Encoding: gzip, deflate
User-Agent: curl/8.0
```

### üîπ R√©ponse du serveur (compress√©e)

Si le serveur supporte Gzip, il renverra une r√©ponse comme celle-ci :

```http
HTTP/1.1 200 OK
Content-Type: application/json
Content-Encoding: gzip
Content-Length: 132

... donn√©es compress√©es en binaire ...
```

Le client doit alors **d√©compresser** le corps de la r√©ponse avant de le lire.

---

### üîπ En Java (exemple avec `HttpClient`)

```java
HttpClient client = HttpClient.newBuilder()
    .build();

HttpRequest request = HttpRequest.newBuilder()
    .uri(URI.create("https://example.com/api/users"))
    .header("Accept-Encoding", "gzip")
    .build();

HttpResponse<InputStream> response = client.send(request, HttpResponse.BodyHandlers.ofInputStream());

// D√©compression automatique si "Content-Encoding: gzip"
InputStream bodyStream = new GZIPInputStream(response.body());
String responseBody = new String(bodyStream.readAllBytes(), StandardCharsets.UTF_8);

System.out.println(responseBody);
```

---

### üîπ Points √† noter

* **Le serveur doit explicitement renvoyer `Content-Encoding: gzip`** pour que la compression soit appliqu√©e.
* Les frameworks comme **Spring Boot**, **Express.js**, ou **Nginx** peuvent g√©rer cela automatiquement.
* Gzip est **sans perte**, donc la donn√©e d√©compress√©e est identique √† l‚Äôoriginale.
* D‚Äôautres encodages possibles : `deflate`, `br` (Brotli, plus efficace mais moins universel).

---

### üîπ Exemple avec `curl`

Tu peux tester la compression facilement :

```bash
curl -H "Accept-Encoding: gzip" -I https://example.com
```

Ou pour voir le contenu d√©compress√© :

```bash
curl -H "Accept-Encoding: gzip" --compressed https://example.com
```

---

Souhaites-tu que je te montre comment **activer la compression Gzip c√¥t√© serveur**, par exemple sur **Spring Boot**, **Nginx**, ou **Express.js** ?
